/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


template<typename F>
inline void Fibonacci(F& f)
{
	int item1 = 1;
	int item2 = 1;

	if(f(item1) || f(item2))
	{
		return;
	}

	while(true)
	{
		int next = item1 + item2;
		if(f(next))
		{
			return;
		}

		item1 = item2;
		item2 = next;
	}
}

template<int MAX = 4 * 1000000>
class FibonacciEvenSumIterator
{
public:
	FibonacciEvenSumIterator():m_sum(0){}
	bool operator()(int item)
	{
		if(item > MAX) return true;
		if(item % 2 == 0 ) m_sum += item;
		return false;
	}

	int Sum()const
	{
		return this->m_sum;
	}

private:
	int m_sum;
};